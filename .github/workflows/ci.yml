name: CI Python DevSecOps

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  security-events: write
  id-token: write
  actions: read

concurrency:
  group: ci-python-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  precommit:
    name: pre-commit checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit
      - name: Run pre-commit (skip YAML check for .gitlab-ci.yml)
        env:
          SKIP: check-yaml
        run: pre-commit run -a --show-diff-on-failure

  build-test:
    name: Build and Test (Docker)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          load: true
          tags: app:ci
      - name: Run tests in container
        run: docker run --rm -e PYTHONUNBUFFERED=1 app:ci pytest -q

  gitleaks:
    name: Gitleaks (secrets)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          leaks_args: --redact --report-format sarif --report-path results.sarif
      - uses: actions/upload-artifact@v4
        with:
          name: gitleaks-sarif
          path: results.sarif

  semgrep:
    name: Semgrep (SAST)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install semgrep
        run: |
          python -m pip install --upgrade pip
          pip install "semgrep==1.*"
      - name: Run semgrep (OWASP Top 10)
        run: semgrep ci --config p/owasp-top-ten --sarif --output semgrep.sarif
      - uses: actions/upload-artifact@v4
        with:
          name: semgrep-sarif
          path: semgrep.sarif

  trivy-fs:
    name: Trivy FS (deps)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Trivy FS scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: "fs"
          format: "sarif"
          output: "trivy-fs.sarif"
          ignore-unfixed: true
          severity: "HIGH,CRITICAL"
          exit-code: "1"
      - uses: actions/upload-artifact@v4
        with:
          name: trivy-fs-sarif
          path: trivy-fs.sarif

  trivy-image:
    name: Trivy Image (container)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          load: true
          tags: app:ci
      - name: Trivy Image scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: "app:ci"
          format: "sarif"
          output: "trivy-image.sarif"
          ignore-unfixed: true
          severity: "HIGH,CRITICAL"
          exit-code: "1"
      - uses: actions/upload-artifact@v4
        with:
          name: trivy-image-sarif
          path: trivy-image.sarif

  sbom:
    name: SBOM (CycloneDX)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Generate SBOM (FS) with Trivy Action
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: "fs"
          format: "cyclonedx"
          output: "sbom.cdx.json"
          ignore-unfixed: true
          severity: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL" # не влияет на SBOM, но ок
          exit-code: "0" # sbom всегда генерится, не валим job
      - uses: actions/upload-artifact@v4
        with:
          name: sbom-cyclonedx
          path: sbom.cdx.json